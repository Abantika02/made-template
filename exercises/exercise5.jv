// 1. Pipeline for processing GTFS data
pipeline PublicTransportDataPipeline {

    GTFSDataExtractor -> ZipFileProcessor;

    ZipFileProcessor
        -> StopsFileSelector
        -> TextFileProcessor
        -> CSVFileProcessor
        -> DataTableProcessor
        -> SQLiteDataSaver;

    // 2. Extract GTFS ZIP file from a provided URL
    block GTFSDataExtractor oftype HttpExtractor {
        url: "https://gtfs.rhoenenergie-bus.de/GTFS.zip";
    }

    block ZipFileProcessor oftype ArchiveInterpreter {
        archiveType: "zip";
    }

    // Select stops.txt file from the extracted content
    block StopsFileSelector oftype FilePicker {
        path: "/stops.txt";
    }

    // 3. Process the text file with UTF-8 to support special characters like umlauts
    block TextFileProcessor oftype TextFileInterpreter {
        encoding: "utf8";
    }

    block CSVFileProcessor oftype CSVInterpreter {
        delimiter: ',';
        enclosing: '"';
		enclosingEscape: '"';
    }

    // 4. Setup constraints and data types for zone filtering
    valuetype Zone1925 oftype integer {
        constraints: [SpecificZoneConstraint];
    }

    constraint SpecificZoneConstraint on integer:
        value == 1925;

    valuetype GeoLatLonConstraint oftype decimal {
        constraints: [LatitudeLongitudeRange];
    }

    constraint LatitudeLongitudeRange oftype RangeConstraint {
        lowerBound: -90;
        lowerBoundInclusive: true;
        upperBound: 90;
        upperBoundInclusive: true;
    }

    // 5. Convert filtered data into a structured table
    block DataTableProcessor oftype TableInterpreter {
        header: true;
        columns: [
            "stop_id" oftype integer,
            "stop_name" oftype text,
            "stop_lat" oftype GeoLatLonConstraint,
            "stop_lon" oftype GeoLatLonConstraint,
            "zone_id" oftype Zone1925,
        ];
    }

    // 6. Save the processed data into an SQLite database
    block SQLiteDataSaver oftype SQLiteLoader {
        table: "stops";
        file: "gtfs.sqlite";
    }
}
